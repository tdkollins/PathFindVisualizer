{"version":3,"sources":["PureCanvas.js","Canvas.js","Node.js","Highlight.js","Graph.js","App.js","index.js"],"names":["PureCanvas","props","clientWidth","document","body","clientHeight","this","width","height","ref","node","contextRef","getContext","React","Component","Canvas","state","forceRender","saveContext","bind","ctx","canvas","nextProps","renderId","start","end","setState","nodes","nodeLength","length","save","clearRect","i","beginPath","lineWidth","strokeStyle","fillStyle","arc","x","y","Math","PI","fill","stroke","restore","connections","neighbours","connectionsLength","j","moveTo","lineTo","Node","neighbourIdList","id","groupId","neighbourGroups","includes","floor","push","mx","my","dx","abs","dy","nodeRadius","neighbour","Highlight","hovering","hoveringId","selection","selectionId","Graph","dragOffX","dragOffY","dragging","clickX","clickY","addNode","renderNode","handleMove","handleMousedown","handleMouseup","updateAnimationState","canvasElements","newNodeId","neighbourLength","updateNeighbours","rAF","requestAnimationFrame","addEventListener","e","renderList","hover","prevState","cancelAnimationFrame","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.57faf597.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass PureCanvas extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.clientWidth = document.body.clientWidth;\r\n    this.clientHeight = document.body.clientHeight;\r\n  }\r\n\r\n  shouldComponentUpdate() {\r\n    if (document.body.clientWidth !== this.clientWidth || document.body.clientHeight !== this.clientHeight) {\r\n      this.clientWidth = document.body.clientWidth;\r\n      this.clientHeight = document.body.clientHeight;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <canvas\r\n        width={this.clientWidth}\r\n        height={this.clientHeight}\r\n        ref={node =>\r\n          node ? this.props.contextRef(node.getContext('2d')) : null\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default PureCanvas\r\n","import React from \"react\";\r\nimport PureCanvas from \"./PureCanvas.js\"\r\n\r\nclass Canvas extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      forceRender: true\r\n    };\r\n    this.saveContext = this.saveContext.bind(this);\r\n  }\r\n\r\n  saveContext(ctx) {\r\n    this.ctx = ctx;\r\n    this.width = this.ctx.canvas.width;\r\n    this.height = this.ctx.canvas.height;\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    if (this.state.forceRender ||\r\n        nextProps.forceRender ||\r\n        nextProps.renderId !== null &&\r\n        nextProps.renderId >= nextProps.start &&\r\n        nextProps.renderId <= nextProps.end) {\r\n          return true;\r\n        }\r\n    return false;\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.forceRender) {\r\n      this.setState({forceRender: false});\r\n    }\r\n    const nodes = this.props.nodes;\r\n    const nodeLength = nodes.length;\r\n    this.ctx.save();\r\n    this.ctx.clearRect(0, 0, this.width, this.height);\r\n    for (let i = this.props.start; i < this.props.end && i < nodeLength; i++) {\r\n      this.ctx.beginPath();\r\n      this.ctx.lineWidth = 10;\r\n      this.ctx.strokeStyle = 'Orange';\r\n      this.ctx.fillStyle = 'Orange';\r\n      this.ctx.arc(nodes[i].x, nodes[i].y, 50, 0, 2 * Math.PI);\r\n      this.ctx.fill();\r\n      this.ctx.stroke();\r\n      this.ctx.restore();\r\n\r\n      const connections = nodes[i].neighbours;\r\n      const connectionsLength = connections.length;\r\n      for (let j = 0; j < connectionsLength; j++) {\r\n        if (i < connections[j]) {\r\n          this.ctx.beginPath();\r\n          this.ctx.strokeStyle = 'Orange';\r\n          this.ctx.moveTo(nodes[i].x, nodes[i].y);\r\n          this.ctx.lineTo(nodes[connections[j]].x, nodes[connections[j]].y);\r\n          this.ctx.lineWidth = 15;\r\n          this.ctx.stroke();\r\n          this.ctx.restore();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <PureCanvas contextRef={this.saveContext} />;\r\n  }\r\n}\r\n\r\nexport default Canvas;\r\n","class Node {\r\n  constructor(x, y, neighbourIdList, id, groupId) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.neighbours = neighbourIdList;\r\n    this.neighbourGroups = [];\r\n    this.id = id;\r\n    this.groupId = groupId;\r\n\r\n    for (let i = 0; i < this.neighbours.length; i++) {\r\n      if (!this.neighbourGroups.includes(Math.floor(this.neighbours[i] / 150) * 150)) {\r\n        this.neighbourGroups.push(Math.floor(this.neighbours[i] / 150) * 150)\r\n      }\r\n    }\r\n  }\r\n\r\n  hover(mx, my) {\r\n    const nodeRadius = 50;\r\n    const dx = Math.abs(this.x - mx);\r\n    const dy = Math.abs(this.y - my);\r\n    return ((dx * dx) + (dy * dy) < nodeRadius * nodeRadius + 1000);\r\n  }\r\n\r\n  updateNeighbours(neighbour) {\r\n    if (this.neighbours.includes(neighbour)) {\r\n      return;\r\n    }\r\n    this.neighbours.push(neighbour);\r\n    return;\r\n  }\r\n}\r\n\r\nexport default Node\r\n","import React from \"react\";\r\nimport PureCanvas from \"./PureCanvas.js\"\r\n\r\nclass Highlight extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.saveContext = this.saveContext.bind(this);\r\n  }\r\n\r\n  saveContext(ctx) {\r\n    this.ctx = ctx;\r\n    this.width = this.ctx.canvas.width;\r\n    this.height = this.ctx.canvas.height;\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.ctx.clearRect(0, 0, this.width, this.height);\r\n    if (this.props.hovering) {\r\n      const hoveringId = this.props.hovering.id;\r\n      this.ctx.save();\r\n      this.ctx.beginPath();\r\n      this.ctx.lineWidth = 10;\r\n      this.ctx.strokeStyle = 'White';\r\n      this.ctx.arc(this.props.nodes[hoveringId].x,\r\n         this.props.nodes[hoveringId].y, 50, 0, 2 * Math.PI);\r\n      this.ctx.stroke();\r\n      this.ctx.restore();\r\n    }\r\n    if (this.props.selection) {\r\n      const selectionId = this.props.selection.id;\r\n      this.ctx.save();\r\n      this.ctx.beginPath();\r\n      this.ctx.lineWidth = 10;\r\n      this.ctx.strokeStyle = 'Yellow';\r\n      this.ctx.arc(this.props.nodes[selectionId].x,\r\n         this.props.nodes[selectionId].y, 50, 0, 2 * Math.PI);\r\n      this.ctx.stroke();\r\n      this.ctx.restore();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <PureCanvas contextRef={this.saveContext} />;\r\n  }\r\n}\r\n\r\nexport default Highlight\r\n","//This should really be split into a graph, and a graphinteraction component\r\nimport React from \"react\";\r\nimport Canvas from \"./Canvas.js\"\r\nimport Node from \"./Node.js\"\r\nimport Highlight from \"./Highlight\"\r\n\r\nclass Graph extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      nodes: [],\r\n      selection: null,\r\n      dragOffX: 0,\r\n      dragOffY: 0,\r\n      dragging: false,\r\n      renderId: null,\r\n      clickX: null,\r\n      clickY: null,\r\n      forceRender: false\r\n    };\r\n    this.addNode = this.addNode.bind(this);\r\n    this.renderNode = this.renderNode.bind(this);\r\n    this.handleMove = this.handleMove.bind(this);\r\n    this.handleMousedown = this.handleMousedown.bind(this);\r\n    this.handleMouseup = this.handleMouseup.bind(this);\r\n    this.updateAnimationState = this.updateAnimationState.bind(this);\r\n    this.canvasElements = [];\r\n  }\r\n\r\n  addNode(x, y, neighbourIdList=[]) {\r\n    const newNodeId = this.state.nodes.length;\r\n    this.state.nodes.push(new Node(x, y, neighbourIdList, newNodeId, (Math.floor(this.state.nodes.length / 150) * 150)));\r\n    const neighbourLength = neighbourIdList.length;\r\n    for (let i = 0; i < neighbourLength; i++) {\r\n      const id = neighbourIdList[i];\r\n      this.state.nodes[id].updateNeighbours(newNodeId);\r\n    }\r\n    return newNodeId;\r\n  }\r\n\r\n  renderNode(id) {\r\n    this.setState({renderId: id});\r\n    this.setState({renderId: null});\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.rAF = requestAnimationFrame(this.updateAnimationState);\r\n    this.addNode(200, 200);\r\n    this.addNode(70, 80, [0]);\r\n    this.addNode(300, 100, [1]);\r\n    /*for (let i = 2; i < 1000; i++) {\r\n      this.addNode((100 * i) % 1000, (50 * i) % 1000, [i - 1, i - 2])\r\n    }*/\r\n    document.addEventListener('mousemove', this.handleMove);\r\n    document.addEventListener('mousedown', this.handleMousedown);\r\n    document.addEventListener('mouseup', this.handleMouseup);\r\n  }\r\n\r\n  handleMove(e) {\r\n    const nodes = this.state.nodes;\r\n    const nodeLength = nodes.length;\r\n    if (this.state.dragging) {\r\n      this.state.hovering.x = (e.x - this.state.dragOffX);\r\n      this.state.hovering.y = (e.y - this.state.dragOffY);\r\n      this.renderNode(this.state.hovering.id);\r\n      const renderList = []\r\n      renderList.push(this.state.hovering.groupId);\r\n      for (let i = 0; i < this.state.hovering.neighbourGroups.length; i++) {\r\n        if (!renderList.includes(this.state.hovering.neighbourGroups[i])) {\r\n          renderList.push(this.state.hovering.neighbourGroups[i])\r\n        }\r\n      }\r\n      for (let i = 0; i < renderList.length; i++) {\r\n        this.renderNode(renderList[i])\r\n      }\r\n      return;\r\n    }\r\n    for (let i = nodeLength - 1; i >= 0; i--) {\r\n      if (nodes[i].hover(e.x, e.y)) {\r\n        this.setState({hovering: nodes[i]});\r\n        return;\r\n      }\r\n    }\r\n    if (this.state.hovering) {\r\n      this.setState({hovering: null});\r\n      return;\r\n    }\r\n  }\r\n\r\n  handleMouseup(e) {\r\n    this.setState({dragging: false});\r\n    if (this.state.hovering != null &&\r\n      Math.abs(((this.state.clickX - e.x) ^ 2) +\r\n      ((this.state.clickY - e.y) ^ 2)) < (100 ^ 2))\r\n    {\r\n      if (this.state.selection != null) {\r\n        const selectionId = this.state.selection.id;\r\n        const hoveringId = this.state.hovering.id;\r\n        if (selectionId == hoveringId) {\r\n          this.setState({selection: null});\r\n          return;\r\n        }\r\n        const nodes = this.state.nodes;\r\n        if (!nodes[selectionId].neighbours.includes(hoveringId)) {\r\n          nodes[selectionId].updateNeighbours(hoveringId);\r\n          nodes[hoveringId].updateNeighbours(selectionId);\r\n          this.setState({\r\n            selection: null,\r\n            forceRender: true\r\n          });\r\n          return;\r\n        }\r\n      }\r\n      this.setState({selection: this.state.hovering});\r\n    }\r\n    else if (this.state.hovering == null && this.state.selection != null) {\r\n      this.addNode(e.x, e.y, [this.state.selection.id]);\r\n      this.setState({\r\n        selection: null,\r\n        forceRender: true\r\n      });\r\n    }\r\n    this.setState({\r\n      clickX: null,\r\n      clickY: null\r\n    });\r\n  }\r\n\r\n  handleMousedown(e) {\r\n    if (this.state.clickX == null) {\r\n      this.setState({\r\n        clickX: e.x,\r\n        clickY: e.y\r\n      });\r\n    }\r\n    if (this.state.hovering) {\r\n      this.setState({\r\n        dragOffX: e.x - this.state.hovering.x,\r\n        dragOffY: e.y - this.state.hovering.y,\r\n        dragging: true\r\n      });\r\n      return;\r\n    }\r\n  }\r\n\r\n  updateAnimationState() {\r\n    this.setState(prevState => ({\r\n      nodes: prevState.nodes\r\n    }));\r\n    this.rAF = requestAnimationFrame(this.updateAnimationState);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    cancelAnimationFrame(this.rAF);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.forceRender) {\r\n      this.setState({forceRender: false});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const canvasElements = []\r\n    for (let i = 0; i < this.state.nodes.length; i += 150) {\r\n      canvasElements.push(<Canvas\r\n        forceRender={this.state.forceRender}\r\n        nodes={this.state.nodes}\r\n        start={i}\r\n        end={i + 149}\r\n        renderId={this.state.renderId}\r\n      />)\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {canvasElements}\r\n        <Highlight\r\n          nodes={this.state.nodes}\r\n          hovering={this.state.hovering}\r\n          selection={this.state.selection} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Graph;\r\n","import React from 'react';\nimport './App.css';\nimport Graph from \"./Graph.js\"\n\nfunction App() {\n  return (\n    <div>\n      <Graph />\n    </div>\n  );\n}\n\nexport default App;\n\n/*import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Graph from \"react-graph-vis\";\n\nfunction App() {\n  let nodeList = []\n  let edgeList= []\n  for (let i = 0; i < 1000; i++) {\n    nodeList.push({ id: i, label: \"Node \" + i, title: \"node \" + i + \" tootip text\" })\n    if (i >= 3) {\n        edgeList.push({ from: i, to: i - 1 })\n        edgeList.push({ from: i, to: i - 2 })\n    }\n  }\n  const graph = {\n    nodes: nodeList,\n    edges: edgeList\n  };\n\n  const options = {\n    layout: {\n      hierarchical: true\n    },\n    edges: {\n      color: \"#000000\"\n    },\n    height: \"500px\"\n  };\n\n  const events = {\n    select: function(event) {\n      var { nodes, edges } = event;\n    }\n  };\n  return (\n    <Graph\n      graph={graph}\n      options={options}\n      events={events}\n      getNetwork={network => {\n        //  if you want access to vis.js network api you can set the state in a parent component using this property\n      }}\n    />\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n\nexport default App*/\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}